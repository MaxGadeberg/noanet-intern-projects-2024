# Max Gadeberg
# Aug 29, 2024

# Generated by Selenium IDE
import pytest
import time
import json
import sys
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities
from time import sleep
from selenium.webdriver.support.ui import WebDriverWait

username = ""
password = ""

class TestSNOWIncident():
    def setup_method(self, method):
        print("Setting up the method.", file=sys.__stderr__)
        self.driver = webdriver.Firefox()
        self.vars = {}
    
    def teardown_method(self, method):
        print("Tearing down the method.", file=sys.__stderr__)
        self.driver.quit()
    
    def test_sNOWIncident(self):
        wait = WebDriverWait(self.driver, 10)

        try:
            print("Opening incident page.", file=sys.__stderr__)
            self.driver.get("https://exampledev.service-now.com/now/nav/ui/classic/params/target/incident.do%3Fsys_id%3D-1%26sys_is_list%3Dtrue%26sys_target%3Dincident%26sysparm_checked_items%3D%26sysparm_fixed_query%3D%26sysparm_group_sort%3D%26sysparm_list_css%3D%26sysparm_query%3Dactive%253dtrue%26sysparm_referring_url%3Dincident_list.do%253fsysparm_query%253dactive%25253Dtrue%25255EEQ%254099%2540active%253dtrue%26sysparm_target%3D%26sysparm_view%3D")
            self.driver.set_window_size(1400, 800)

            sleep(3)

            print("Logging in.", file=sys.__stderr__)
            self.driver.find_element(By.ID, "user_name").click()
            self.driver.find_element(By.ID, "user_name").send_keys(username)
            self.driver.find_element(By.ID, "user_password").click()
            self.driver.find_element(By.ID, "user_password").send_keys(password)
            self.driver.find_element(By.ID, "sysverb_login").click()

            sleep(3)

            self.driver.get("https://exampledev.service-now.com/now/nav/ui/classic/params/target/incident.do%3Fsys_id%3D-1%26sys_is_list%3Dtrue%26sys_target%3Dincident%26sysparm_checked_items%3D%26sysparm_fixed_query%3D%26sysparm_group_sort%3D%26sysparm_list_css%3D%26sysparm_query%3Dactive%253dtrue%26sysparm_referring_url%3Dincident_list.do%253fsysparm_query%253dactive%25253Dtrue%25255EEQ%254099%2540active%253dtrue%26sysparm_target%3D%26sysparm_view%3D")
            self.driver.set_window_size(1400, 800)

            sleep(7)

            print("Switching to frame and filling form.", file=sys.__stderr__)
            self.driver.switch_to.frame(0)
            self.driver.find_element(By.ID, "sys_display.incident.cmdb_ci").send_keys("AED/WTN/ETH07002537.0")
            dropdown = wait.until(EC.element_to_be_clickable((By.XPATH, "//select[@id='incident.u_choice_1']")))
            self.driver.find_element(By.CSS_SELECTOR, "html").click()
            dropdown.click()
            dropdown.find_element(By.XPATH, "//option[. = 'No Outage']").click()
            self.driver.find_element(By.CSS_SELECTOR, "#incident\\.u_choice_1 > option:nth-child(2)").click()
            self.driver.find_element(By.ID, "incident.u_priority").click()
            dropdown = self.driver.find_element(By.ID, "incident.u_priority")
            dropdown.find_element(By.XPATH, "//option[. = 'Critical']").click()
            self.driver.find_element(By.CSS_SELECTOR, "#incident\\.u_priority > option:nth-child(2)").click()
            self.driver.find_element(By.ID, "incident.u_customer_ticket_number").click()
            self.driver.find_element(By.ID, "incident.u_customer_ticket_number").send_keys("1234")
            self.driver.find_element(By.ID, "incident.u_provider_ticket_number").click()
            self.driver.find_element(By.ID, "incident.u_provider_ticket_number").send_keys("1234")
            self.driver.find_element(By.ID, "label.ni.incident.u_nn_fiber").click()
            self.driver.find_element(By.ID, "label.ni.incident.u_customer_initiated").click()
            self.driver.find_element(By.ID, "incident.u_nn_complianceissue_v2").click()
            dropdown = self.driver.find_element(By.ID, "incident.u_nn_complianceissue_v2")
            dropdown.find_element(By.XPATH, "//option[. = 'No']").click()
            self.driver.find_element(By.CSS_SELECTOR, "#incident\\.u_nn_complianceissue_v2 > option:nth-child(2)").click()
            self.driver.find_element(By.ID, "label.ni.incident.u_rma_needed").click()
            self.driver.find_element(By.ID, "incident.u_rma_equipment_vendor").click()
            dropdown = self.driver.find_element(By.ID, "incident.u_rma_equipment_vendor")
            dropdown.find_element(By.XPATH, "//option[. = 'ADVA']").click()
            self.driver.find_element(By.CSS_SELECTOR, "#incident\\.u_rma_equipment_vendor > option:nth-child(2)").click()
            self.driver.find_element(By.ID, "incident.u_vendor_rma_ticket").click()
            self.driver.find_element(By.ID, "incident.u_vendor_rma_ticket").send_keys("1234")
            self.driver.find_element(By.ID, "incident.u_part_number").click()
            self.driver.find_element(By.ID, "incident.u_part_number").send_keys("1234")
            self.driver.find_element(By.ID, "incident.u_serial_number").click()
            self.driver.find_element(By.ID, "incident.u_serial_number").send_keys("1234")
            self.driver.find_element(By.ID, "sys_display.incident.location").click()
            self.driver.find_element(By.ID, "sys_display.incident.location").send_keys("Omak - OMK - Okanogan PUD COLO")
            self.driver.find_element(By.ID, "incident.u_next_action").click()
            self.driver.find_element(By.ID, "incident.u_next_action").send_keys("action")
            self.driver.find_element(By.ID, "incident.short_description").click()
            self.driver.find_element(By.ID, "incident.short_description").send_keys("desc")
            self.driver.find_element(By.ID, "incident.description").click()
            element = self.driver.find_element(By.CSS_SELECTOR, "#label\\.incident\\.description > .col-xs-12")
            actions = ActionChains(self.driver)
            actions.move_to_element(element).perform()
            self.driver.find_element(By.ID, "incident.description").send_keys("summary")
            self.driver.find_element(By.ID, "incident.u_current_action").click()
            self.driver.find_element(By.ID, "incident.u_current_action").send_keys("email update")
            self.driver.find_element(By.ID, "incident.work_notes").click()
            self.driver.find_element(By.ID, "incident.work_notes").send_keys("notes")
            self.driver.find_element(By.ID, "incident.comments").click()
            self.driver.find_element(By.ID, "incident.comments").send_keys("comments")
            self.driver.find_element(By.ID, "incident.contact_type").click()
            dropdown = self.driver.find_element(By.ID, "incident.contact_type")
            dropdown.find_element(By.XPATH, "//option[. = 'Zabbix Created']").click()
            self.driver.find_element(By.CSS_SELECTOR, "#incident\\.contact_type > option:nth-child(2)").click()
            self.driver.find_element(By.ID, "incident.state").click()
            dropdown = self.driver.find_element(By.ID, "incident.state")
            dropdown.find_element(By.XPATH, "//option[. = 'In Progress']").click()
            self.driver.find_element(By.CSS_SELECTOR, "#incident\\.state > option:nth-child(3)").click()
            self.driver.find_element(By.ID, "incident.category").click()
            dropdown = self.driver.find_element(By.ID, "incident.category")
            dropdown.find_element(By.XPATH, "//option[. = 'Application']").click()
            self.driver.find_element(By.CSS_SELECTOR, "#incident\\.category > option:nth-child(2)").click()
            self.driver.find_element(By.ID, "incident.subcategory").click()
            dropdown = self.driver.find_element(By.ID, "incident.subcategory")
            dropdown.find_element(By.XPATH, "//option[. = 'Access Control']").click()
            self.driver.find_element(By.CSS_SELECTOR, "#incident\\.subcategory > option:nth-child(2)").click()
            element = self.driver.find_element(By.CSS_SELECTOR, "#label\\.incident\\.assigned_to > .col-xs-12")
            actions = ActionChains(self.driver)
            actions.move_to_element(element).perform()
            self.driver.find_element(By.ID, "sys_display.incident.assignment_group").click()
            self.driver.find_element(By.ID, "sys_display.incident.assignment_group").send_keys("Access")
            self.driver.find_element(By.ID, "sys_display.incident.assigned_to").click()
            self.driver.find_element(By.ID, "sys_display.incident.assigned_to").send_keys("Brady McCarrell")
            sleep(1)
            self.driver.find_element(By.CSS_SELECTOR, "html").click()
            self.driver.find_element(By.ID, "incident.u_escalation").click()
            dropdown = self.driver.find_element(By.ID, "incident.u_escalation")
            dropdown.find_element(By.XPATH, "//option[. = 'Senior NOC']").click()
            self.driver.find_element(By.CSS_SELECTOR, "#incident\\.u_escalation > option:nth-child(2)").click()
            self.driver.find_element(By.ID, "label.ni.incident.u_eng_escalated").click()
            self.driver.find_element(By.CSS_SELECTOR, ".input-group-btn:nth-child(3) > #incident\\.work_start\\.ui_policy_sensitive > .icon-calendar").click()
            self.driver.find_element(By.ID, "GwtDateTimePicker_ok").click()
            self.driver.find_element(By.CSS_SELECTOR, ".input-group-btn:nth-child(3) > #incident\\.work_end\\.ui_policy_sensitive > .icon-calendar").click()
            self.driver.find_element(By.ID, "GwtDateTimePicker_ok").click()
            element = self.driver.find_element(By.CSS_SELECTOR, ".input-group-btn:nth-child(3) > #incident\\.work_start\\.ui_policy_sensitive")
            actions = ActionChains(self.driver)
            actions.move_to_element(element).perform()
            self.driver.find_element(By.ID, "sysverb_insert_bottom").click()

            # Success message
            print("✅ Test completed successfully. All actions performed and form submitted")
        except Exception as e:
            print(f"❌ An error occurred: {e}", file=sys.__stderr__)
            raise
