# Max Gadeberg
# Aug 29, 2024

# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities
from time import sleep

# User credentials
username = ""
password = ""

class TestSNOWCase():
    def setup_method(self, method):
        # Initialize the Firefox WebDriver
        self.driver = webdriver.Firefox()
        self.vars = {}
        print("Setup complete. WebDriver initialized.")

    def teardown_method(self, method):
        # Close the browser after test execution
        self.driver.quit()
        print("Teardown complete. WebDriver closed.")

    def test_sNOWCase(self):
        try:
            # Navigate to the ServiceNow case creation page
            self.driver.get("https://exampledev.service-now.com/sn_customerservice_case.do?WIZARD:action=follow&sys_action=&sys_id=-1&sys_target=sn_customerservice_case&sysparm_query=active%3dtrue&sysparm_target=&sysparm_view=case&wiz_action=sysverb_new&wiz_collection=&wiz_collectionID=&wiz_collection_key=&wiz_collection_related_field=&wiz_referring_url=&wiz_view=")
            print("Navigated to ServiceNow case creation page.")

            # Wait for the page to load
            sleep(3)

            # Log in to ServiceNow
            self.driver.find_element(By.ID, "user_name").send_keys(username)
            self.driver.find_element(By.ID, "user_password").send_keys(password)
            self.driver.find_element(By.ID, "sysverb_login").click()
            print("Logged in successfully.")

            # Wait for the login process to complete
            sleep(3)

            # Navigate to the new case form
            self.driver.get("https://exampledev.service-now.com/sn_customerservice_case.do?WIZARD:action=follow&sys_action=&sys_id=-1&sys_target=sn_customerservice_case&sysparm_query=active%3dtrue&sysparm_target=&sysparm_view=case&wiz_action=sysverb_new&wiz_collection=&wiz_collectionID=&wiz_collection_key=&wiz_collection_related_field=&wiz_referring_url=&wiz_view=")
            print("Navigated to new case form.")

            # Wait for the form to load
            sleep(5)

            # Fill out the case form
            # Select contact type
            self.driver.find_element(By.ID, "sn_customerservice_case.contact_type").click()
            dropdown = self.driver.find_element(By.ID, "sn_customerservice_case.contact_type")
            dropdown.find_element(By.XPATH, "//option[. = 'Web']").click()
            print("Selected 'Web' as contact type.")
            
            # Enter account name
            self.driver.find_element(By.ID, "sys_display.sn_customerservice_case.account").send_keys("Advanced Excavation, Inc.")
            print("Entered account name.")
            
            # Enter customer ticket number
            self.driver.find_element(By.ID, "sn_customerservice_case.u_customer_ticket_number").send_keys("1234")
            print("Entered customer ticket number.")
            
            # Enter end user name
            self.driver.find_element(By.ID, "sn_customerservice_case.u_end_user_name").send_keys("user")
            print("Entered end user name.")
            
            # Select category
            self.driver.find_element(By.ID, "sn_customerservice_case.category").click()
            dropdown = self.driver.find_element(By.ID, "sn_customerservice_case.category")
            dropdown.find_element(By.XPATH, "//option[. = 'Application']").click()
            print("Selected 'Application' as category.")
            
            # Select subcategory
            self.driver.find_element(By.ID, "sn_customerservice_case.subcategory").click()
            dropdown = self.driver.find_element(By.ID, "sn_customerservice_case.subcategory")
            dropdown.find_element(By.XPATH, "//option[. = 'Access Control']").click()
            print("Selected 'Access Control' as subcategory.")
            
            # Enter parent case number
            self.driver.find_element(By.ID, "sys_display.sn_customerservice_case.parent").send_keys("CHG0010001")
            print("Entered parent case number.")
            
            # Select escalation level
            self.driver.find_element(By.ID, "sn_customerservice_case.u_escalation").click()
            dropdown = self.driver.find_element(By.ID, "sn_customerservice_case.u_escalation")
            dropdown.find_element(By.XPATH, "//option[. = 'Tier 2']").click()
            print("Selected 'Tier 2' as escalation level.")
            
            # Enter configuration item (CMDB)
            self.driver.find_element(By.ID, "sys_display.sn_customerservice_case.cmdb_ci").click()
            element = self.driver.find_element(By.CSS_SELECTOR, "#label\\.sn_customerservice_case\\.cmdb_ci > .col-xs-12")
            actions = ActionChains(self.driver)
            actions.move_to_element(element).perform()
            self.driver.find_element(By.ID, "sys_display.sn_customerservice_case.cmdb_ci").send_keys("Impact Calculation")
            print("Entered configuration item.")
            
            # Enter short description
            self.driver.find_element(By.ID, "sn_customerservice_case.short_description").send_keys("short desc")
            print("Entered short description.")
            
            # Enter description
            self.driver.find_element(By.ID, "sn_customerservice_case.description").send_keys("desc")
            print("Entered description.")
            
            # Enter next action
            self.driver.find_element(By.ID, "sn_customerservice_case.u_next_action").send_keys("action")
            print("Entered next action.")
            
            # Enter current update
            self.driver.find_element(By.ID, "sn_customerservice_case.u_currentupdate_cs").send_keys("true")
            print("Entered current update.")
            
            # Select assignment group
            self.driver.find_element(By.ID, "sys_display.sn_customerservice_case.assignment_group").send_keys("Access")
            print("Selected 'Access' as assignment group.")
            
            # Assign to a user
            self.driver.find_element(By.ID, "sys_display.sn_customerservice_case.assigned_to").send_keys(Keys.CONTROL, "a")
            self.driver.find_element(By.ID, "sys_display.sn_customerservice_case.assigned_to").send_keys(Keys.BACKSPACE)
            self.driver.find_element(By.ID, "sys_display.sn_customerservice_case.assigned_to").send_keys("Brady McCarrell")
            print("Assigned case to Brady McCarrell.")
            
            # Enter partner name
            self.driver.find_element(By.ID, "sys_display.sn_customerservice_case.partner").send_keys("Adva")
            print("Entered partner name.")
            
            # Enter provider ticket number
            self.driver.find_element(By.ID, "sn_customerservice_case.u_provider_ticket_number").send_keys("1234")
            print("Entered provider ticket number.")
            
            # Select if provider caused the issue
            self.driver.find_element(By.ID, "sn_customerservice_case.u_provider_caused").click()
            dropdown = self.driver.find_element(By.ID, "sn_customerservice_case.u_provider_caused")
            dropdown.find_element(By.XPATH, "//option[. = 'Yes']").click()
            print("Selected 'Yes' for provider caused issue.")
            
            # Enter work start and end dates
            self.driver.find_element(By.CSS_SELECTOR, ".input-group-btn:nth-child(3) > #sn_customerservice_case\\.work_start\\.ui_policy_sensitive").click()
            self.driver.find_element(By.ID, "GwtDateTimePicker_ok").click()
            self.driver.find_element(By.CSS_SELECTOR, ".input-group-btn:nth-child(3) > #sn_customerservice_case\\.work_end\\.ui_policy_sensitive > .icon-calendar").click()
            self.driver.find_element(By.ID, "GwtDateTimePicker_ok").click()
            print("Entered work start and end dates.")
            
            # Enter comments
            self.driver.find_element(By.ID, "sn_customerservice_case.comments").send_keys("comments")
            print("Entered comments.")
            
            # Submit the form
            self.driver.find_element(By.ID, "sysverb_insert_bottom").click()
            print("Form submitted successfully.")

            # Success message
            print("✅ Test completed successfully. All actions performed and form submitted")

        except Exception as e:
            # Print error if something goes wrong
            print(f"❌ An error occurred: {e}")
