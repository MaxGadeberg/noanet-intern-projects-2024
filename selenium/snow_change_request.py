# Max Gadeberg
# Aug 29, 2024

# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities
from time import sleep

# User credentials
username = ""
password = ""

class TestSNOWChangeOrder():
    def setup_method(self, method):
        # Initialize the Firefox WebDriver
        self.driver = webdriver.Firefox()
        self.vars = {}
        print("Setup complete. WebDriver initialized.")

    def teardown_method(self, method):
        # Close the browser after test execution
        self.driver.quit()
        print("Teardown complete. WebDriver closed.")

    def test_sNOWChangeOrder(self):
        try:
            # Navigate to the ServiceNow Change Request page
            self.driver.get("https://exampledev.service-now.com/now/nav/ui/classic/params/target/change_request.do")
            self.driver.set_window_size(1400, 1200)
            print("Navigated to ServiceNow Change Request page.")

            # Wait for the page to load
            sleep(3)

            # Log in to ServiceNow
            self.driver.find_element(By.ID, "user_name").send_keys(username)
            self.driver.find_element(By.ID, "user_password").send_keys(password)
            self.driver.find_element(By.ID, "sysverb_login").click()
            print("Logged in successfully.")

            # Wait for the login process to complete
            sleep(3)

            # Navigate to the Change Request page again
            self.driver.get("https://exampledev.service-now.com/now/nav/ui/classic/params/target/change_request.do")
            self.driver.set_window_size(1400, 1200)
            print("Re-navigated to Change Request page.")

            # Wait for the page to load
            sleep(7)

            # Switch to the frame where the form is located
            self.driver.switch_to.frame(0)
            print("Switched to the correct frame.")

            # Fill out the Change Request form
            # Select category
            self.driver.find_element(By.ID, "change_request.category").click()
            dropdown = self.driver.find_element(By.ID, "change_request.category")
            dropdown.find_element(By.XPATH, "//option[. = 'Application']").click()
            print("Selected 'Application' as category.")
            
            # Select subcategory
            self.driver.find_element(By.ID, "change_request.u_subcategory").click()
            dropdown = self.driver.find_element(By.ID, "change_request.u_subcategory")
            dropdown.find_element(By.XPATH, "//option[. = 'Access Control']").click()
            print("Selected 'Access Control' as subcategory.")
            
            # Enter MOP link
            self.driver.find_element(By.ID, "change_request.u_mop_link").send_keys("mop_link")
            print("Entered MOP link.")
            
            # Select service impact level
            self.driver.find_element(By.ID, "change_request.u_service_impact_level").click()
            dropdown = self.driver.find_element(By.ID, "change_request.u_service_impact_level")
            dropdown.find_element(By.XPATH, "//option[. = 'Service Affecting']").click()
            print("Selected 'Service Affecting' as service impact level.")
            
            # Enter location
            self.driver.find_element(By.ID, "change_request.u_location_other").send_keys("location-other")
            print("Entered location.")
            
            # Select start and end dates
            self.driver.find_element(By.CSS_SELECTOR, ".input-group-btn:nth-child(3) > #change_request\\.start_date\\.ui_policy_sensitive").click()
            self.driver.find_element(By.ID, "GwtDateTimePicker_ok").click()
            self.driver.find_element(By.CSS_SELECTOR, ".input-group-btn:nth-child(3) > #change_request\\.end_date\\.ui_policy_sensitive").click()
            self.driver.find_element(By.ID, "GwtDateTimePicker_ok").click()
            print("Selected start and end dates.")
            
            # Enter short description and description
            self.driver.find_element(By.ID, "change_request.short_description").send_keys("Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.")
            self.driver.find_element(By.ID, "change_request.description").send_keys("Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.")
            print("Entered short description and description.")
            
            # Select technician on site and enter other details
            self.driver.find_element(By.ID, "label.ni.change_request.u_technician_on_site").click()
            self.driver.find_element(By.ID, "change_request.u_technician_location_required").send_keys("Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.")
            self.driver.find_element(By.ID, "change_request.u_duration").send_keys("64")
            self.driver.find_element(By.ID, "change_request.u_provider_ticket").send_keys("1234")
            print("Entered technician location, duration, and provider ticket details.")
            
            # Select announce sent date
            self.driver.find_element(By.CSS_SELECTOR, "#change_request\\.u_announce_sent\\.ui_policy_sensitive > .icon").click()
            self.driver.find_element(By.ID, "GwtDateTimePicker_day16").click()
            #self.driver.find_element(By.ID, "GwtDateTimePicker_ok").click()
            print("Selected announce sent date.")
            
            # Enter work start and end dates
            self.driver.find_element(By.CSS_SELECTOR, ".input-group-btn:nth-child(3) > #change_request\\.work_start\\.ui_policy_sensitive").click()
            self.driver.find_element(By.ID, "GwtDateTimePicker_day16").click()
            self.driver.find_element(By.ID, "GwtDateTimePicker_ok").click()
            self.driver.find_element(By.CSS_SELECTOR, ".input-group-btn:nth-child(3) > #change_request\\.work_end\\.ui_policy_sensitive").click()
            self.driver.find_element(By.ID, "GwtDateTimePicker_ok").click()
            print("Entered work start and end dates.")
            
            # Enter additional details
            self.driver.find_element(By.ID, "change_request.u_equipment_working_on").send_keys("Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.")
            self.driver.find_element(By.ID, "change_request.u_potential_alarms").send_keys("Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.")
            self.driver.find_element(By.ID, "change_request.u_scope_of_work").send_keys("Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.")
            self.driver.find_element(By.ID, "change_request.justification").send_keys("Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.")
            self.driver.find_element(By.ID, "change_request.risk_impact_analysis").send_keys("Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.")
            self.driver.find_element(By.ID, "change_request.test_plan").send_keys("Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.")
            print("Entered additional details like equipment, potential alarms, scope of work, justification, risk impact analysis, and test plan.")
            
            # Switch to the Notes tab and add comments and work notes
            tab = WebDriverWait(self.driver, 10).until(
                EC.element_to_be_clickable((By.XPATH, "//span[@class='tab_caption_text' and text()='Notes']"))
            )
            tab.click()
            self.driver.find_element(By.ID, "change_request.comments").send_keys("comments")
            self.driver.find_element(By.ID, "change_request.work_notes").send_keys("notes")
            print("Added comments and work notes.")
            
            # Submit the form
            self.driver.find_element(By.ID, "sysverb_insert_bottom").click()

            # Success message
            print("✅ Test completed successfully. All actions performed and form submitted")

        except Exception as e:
            # Print error if something goes wrong
            print(f"❌ An error occurred: {e}")
